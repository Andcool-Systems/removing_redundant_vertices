def remove_vertices(graph):
    # Создаем копию графа
    g = graph.copy()
    
    # Получаем список вершин и количество рёбер графов (путей, по которым можно пройти из этой вершины)
    vertices = g.keys()
    degrees = {v: len(adj) for v, adj in g.items()}
    
    clear_list = [] # Массив, содержащий избыточные вершины

    # Перебираем все вершины
    for v in vertices:
        if degrees[v] == 2 and list(g.keys())[0] != v:  # Проверяем, что бы у вершины было 2 пути 
                                                        # Второе условие нужно, что бы алгоритм не удалял начальную точку

            # Получаем соседние вершины
            neighbors = list(g[v])

            """
            Берём предыдущию вершину и удаляем из её данных текущую вершину
            А потом в неё же добавляем последующую относительно текущей вершину

            A - B - C
            у A инфа ['B']
            у B инфа ['A', 'C']
            у C инфа ['B']

            Проверяя B, мы видим, что у нее 2 пути, поэтому выполняем скрипт ниже
            Из A удаляем информацию о B и записываем туда C, результат: ['C']
            Из C удаляем информацию о B и записываем туда A, результат: ['A']

            А 'B' больше не нужён, поэтому мы его удаляем

            Получаем A - C
            """

            g[neighbors[0]].remove(v)
            g[neighbors[0]].add(neighbors[1])

            g[neighbors[1]].remove(v)
            g[neighbors[1]].add(neighbors[0])

            clear_list.append(v) # Добавляем вершину в массив на удаление
    
    # Удаляем из графа избыточные вершины
    for x in clear_list:
        del g[x]

    return g

# Входные данные
graph = {
    0: {1},
    1: {0, 2, 6, 12},
    2: {1, 3},
    3: {2, 4, 5},
    4: {3},
    5: {3},
    6: {1, 7},
    7: {6, 8, 36},
    8: {7, 9, 10, 11},
    9: {8},
    10: {8},
    11: {8},
    12: {1, 13, 26},
    13: {12, 14},
    14: {13, 15},
    15: {14, 16},
    16: {15, 17},
    17: {16, 18},
    18: {17, 19, 35},
    19: {18, 20, 21, 22},
    20: {19},
    21: {19},
    22: {19, 23, 24, 25},
    23: {22},
    24: {22},
    25: {22},
    26: {12, 27, 29, 30},
    27: {26, 28},
    28: {27},
    29: {26},
    30: {26, 31},
    31: {30, 32, 33, 34},
    32: {31},
    33: {31},
    34: {31},
    35: {18},
    36: {7}
}

new_graph = remove_vertices(graph)

print(new_graph) # Вывод результата